{
    "manifests": {
        "pimcore/pimcore": {
            "manifest": {
                "copy-from-recipe": {
                    "bin/": "%BIN_DIR%/",
                    "config/": "%CONFIG_DIR%/",
                    "src/": "%SRC_DIR%/",
                    "public/": "%PUBLIC_DIR%/",
                    "templates/": "templates/",
                    ".docker/": ".docker/"
                },
                "env": {
                    "APP_DEBUG": "true",
                    "PIMCORE_DEV_MODE": "false"
                },
                "docker-compose": {
                    "docker-compose.yml": {
                        "services": [
                            "redis:",
                            "    image: redis:alpine",
                            "    command: [ redis-server, --maxmemory 128mb, --maxmemory-policy volatile-lru, --save \"\" ]",
                            "rabbitmq:",
                            "    image: rabbitmq:alpine",
                            "    volumes:",
                            "        - pimcore-rabbitmq:/var/lib/rabbitmq/",
                            "",
                            "db:",
                            "    image: mariadb:10.11",
                            "    working_dir: /application",
                            "    command: [ mysqld, --character-set-server=utf8mb4, --collation-server=utf8mb4_general_ci, --innodb-file-per-table=1 ]",
                            "    volumes:",
                            "        - pimcore-database:/var/lib/mysql",
                            "    environment:",
                            "        - MYSQL_ROOT_PASSWORD=ROOT",
                            "        - MYSQL_DATABASE=pimcore",
                            "        - MYSQL_USER=pimcore",
                            "        - MYSQL_PASSWORD=pimcore",
                            "    healthcheck:",
                            "        # The service is considered healthy when:",
                            "        # - connection to pimcore db can be established, and",
                            "        # - we can run a simple SQL query.",
                            "        test: [ \"CMD-SHELL\", \"mysql -h db -u$$MYSQL_USER -p$$MYSQL_PASSWORD $$MYSQL_DATABASE -e 'SHOW TABLES;'\" ]",
                            "        interval: 10s",
                            "        retries: 6",
                            "        start_period: 1m",
                            "        timeout: 3s",
                            "",
                            "nginx:",
                            "    image: nginx:stable-alpine",
                            "    ports:",
                            "        - \"80:80\"",
                            "    volumes:",
                            "        - .:/var/www/html:ro",
                            "        - ./.docker/nginx.conf:/etc/nginx/conf.d/default.conf:ro",
                            "    depends_on:",
                            "        - php",
                            "",
                            "php:",
                            "    #user: '1000:1000' # set to your uid:gid",
                            "    image: pimcore/pimcore:php8.3-debug-latest",
                            "    environment:",
                            "        COMPOSER_HOME: /var/www/html",
                            "        PHP_IDE_CONFIG: serverName=localhost",
                            "        # Feed installer configuration via ENV variables.",
                            "        # See: https://pimcore.com/docs/pimcore/current/Development_Documentation/Getting_Started/Advanced_Installation_Topics.html#page_Advanced-Installation-Topics",
                            "        PIMCORE_INSTALL_MYSQL_USERNAME: pimcore",
                            "        PIMCORE_INSTALL_MYSQL_PASSWORD: pimcore",
                            "        PIMCORE_INSTALL_MYSQL_PORT: 3306",
                            "        PIMCORE_INSTALL_MYSQL_HOST_SOCKET: db",
                            "        PIMCORE_INSTALL_MYSQL_DATABASE: pimcore",
                            "    depends_on:",
                            "        db:",
                            "            condition: service_healthy",
                            "    volumes:",
                            "        - .:/var/www/html",
                            "        - ./.docker/messenger.yaml:/var/www/html/config/packages/messenger.yaml:ro",
                            "",
                            "supervisord:",
                            "    #user: '1000:1000' # set to your uid:gid",
                            "    image: pimcore/pimcore:php8.3-supervisord-latest",
                            "    depends_on:",
                            "        rabbitmq:",
                            "            condition: service_started",
                            "        db:",
                            "            condition: service_healthy",
                            "    volumes:",
                            "        - .:/var/www/html",
                            "        - ./.docker/messenger.yaml:/var/www/html/config/packages/messenger.yaml:ro",
                            "        - ./.docker/supervisord.conf:/etc/supervisor/conf.d/pimcore.conf:ro"
                        ],
                        "volumes": [
                            "pimcore-database:",
                            "pimcore-rabbitmq:"
                        ]
                    }
                },
                "composer-scripts": {
                    "post-create-project-cmd": "Pimcore\\Composer::postCreateProject",
                    "post-install-cmd": [
                        "Pimcore\\Composer::postInstall",
                        "@pimcore-scripts"
                    ],
                    "post-update-cmd": [
                        "Pimcore\\Composer::postUpdate",
                        "@pimcore-scripts"
                    ],
                    "pimcore-scripts": [
                        "Pimcore\\Composer::clearCache",
                        "Pimcore\\Composer::installAssets"
                    ]
                },
                "gitignore": [
                    "# remove the following ignores for your project",
                    "/config/pimcore/constants.php",
                    "",
                    "# symfony default",
                    "/.web-server-pid",
                    "/config/pimcore/parameters.yml",
                    "/build/",
                    "/phpunit.xml",
                    "/public/bundles/",
                    "",
                    "# local config",
                    "/.env.local",
                    "/.env.local.php",
                    "/.env.*.local",
                    "!/config/local",
                    "/config/local/*",
                    "!config/local/.gitkeep",
                    "",
                    "/var/*",
                    "!/var/.gitkeep",
                    "!/var/classes/",
                    "/var/classes/DataObject",
                    "",
                    "!/var/config",
                    "/var/config/system.yml",
                    "/var/config/maintenance.php",
                    "",
                    "# project specific recommendations",
                    "/var/config/tag-manager.php",
                    "/var/config/reports.php",
                    "",
                    "/public/var/",
                    "/public/sitemap*.xml",
                    "",
                    "# PHP-CS-Fixer",
                    "/.php-cs-fixer.php",
                    "/.php-cs-fixer.cache",
                    "",
                    "# composer",
                    "/vendor/",
                    "",
                    "# PhpStorm / IDEA",
                    ".idea",
                    "# NetBeans",
                    "project",
                    "",
                    "# temp",
                    ".temp"
                ]
            },
            "files": {
                ".docker/messenger.yaml": {
                    "contents": [
                        "framework:",
                        "    messenger:",
                        "        transports:",
                        "            pimcore_core: 'amqp://rabbitmq:5672/%2f/pimcore_core'",
                        "            pimcore_maintenance: 'amqp://rabbitmq:5672/%2f/pimcore_maintenance'",
                        "            pimcore_scheduled_tasks: 'amqp://rabbitmq:5672/%2f/pimcore_scheduled_tasks'",
                        "            pimcore_image_optimize: 'amqp://rabbitmq:5672/%2f/pimcore_image_optimize'",
                        "            pimcore_asset_update: 'amqp://rabbitmq:5672/%2f/pimcore_asset_update'",
                        ""
                    ],
                    "executable": false
                },
                ".docker/nginx.conf": {
                    "contents": [
                        "",
                        "# mime types are already covered in nginx.conf",
                        "#include mime.types;",
                        "types {",
                        "    image/avif avif;",
                        "}",
                        "",
                        "upstream php-pimcore10 {",
                        "    server php:9000;",
                        "}",
                        "",
                        "map $args $static_page_root {",
                        "    default                                 /var/tmp/pages;",
                        "    \"~*(^|&)pimcore_editmode=true(&|$)\"     /var/nonexistent;",
                        "    \"~*(^|&)pimcore_preview=true(&|$)\"      /var/nonexistent;",
                        "    \"~*(^|&)pimcore_version=[^&]+(&|$)\"     /var/nonexistent;",
                        "}",
                        "",
                        "map $uri $static_page_uri {",
                        "    default                                 $uri;",
                        "    \"/\"                                     /%home;",
                        "}",
                        "",
                        "server {",
                        "    listen [::]:80 default_server;",
                        "    listen 80 default_server;",
                        "",
                        "    #server_name pimcore.localhost;",
                        "",
                        "    root /var/www/html/public;",
                        "    index index.php;",
                        "",
                        "    # Filesize depending on your data",
                        "    client_max_body_size 100m;",
                        "",
                        "    # It is recommended to seclude logs per virtual host",
                        "    #access_log  /var/log/access.log;",
                        "    #error_log   /var/log/error.log error;",
                        "",
                        "    # Protected Assets",
                        "    #",
                        "    ### 1. Option - Restricting access to certain assets completely",
                        "    #",
                        "    # location ~ ^/protected/.* {",
                        "    #   return 403;",
                        "    # }",
                        "    # location ~ ^/var/.*/protected(.*) {",
                        "    #   return 403;",
                        "    # }",
                        "    #",
                        "    # location ~ ^/cache-buster\\-[\\d]+/protected(.*) {",
                        "    #   return 403;",
                        "    # }",
                        "    #",
                        "    ### 2. Option - Checking permissions before delivery",
                        "    #",
                        "    # rewrite ^(/protected/.*) /index.php$is_args$args last;",
                        "    #",
                        "    # location ~ ^/var/.*/protected(.*) {",
                        "    #   return 403;",
                        "    # }",
                        "    #",
                        "    # location ~ ^/cache-buster\\-[\\d]+/protected(.*) {",
                        "    #   return 403;",
                        "    # }",
                        "",
                        "    # Pimcore Head-Link Cache-Busting",
                        "    rewrite ^/cache-buster-(?:\\d+)/(.*) /$1 last;",
                        "",
                        "    # Stay secure",
                        "    #",
                        "    # a) don't allow PHP in folders allowing file uploads",
                        "    location ~* /var/assets/.*\\.php(/|$) {",
                        "        return 404;",
                        "    }",
                        "",
                        "    # b) Prevent clients from accessing hidden files (starting with a dot)",
                        "    # Access to `/.well-known/` is allowed.",
                        "    # https://www.mnot.net/blog/2010/04/07/well-known",
                        "    # https://tools.ietf.org/html/rfc5785",
                        "    location ~* /\\.(?!well-known/) {",
                        "        deny all;",
                        "        log_not_found off;",
                        "        access_log off;",
                        "    }",
                        "",
                        "    # c) Prevent clients from accessing to backup/config/source files",
                        "    location ~* (?:\\.(?:bak|conf(ig)?|dist|fla|in[ci]|log|psd|sh|sql|sw[op])|~)$ {",
                        "        deny all;",
                        "    }",
                        "",
                        "    # Some Admin Modules need this:",
                        "    # Database Admin, Server Info",
                        "    location ~* ^/admin/external {",
                        "        rewrite .* /index.php$is_args$args last;",
                        "    }",
                        "",
                        "    # Redirects for mercure",
                        "\t#location /hub {",
                        "    #  proxy_pass http://mercure.local/.well-known;",
                        "\t#}",
                        "",
                        "    # Thumbnails",
                        "    location ~* .*/(image|video)-thumb__\\d+__.* {",
                        "        try_files /var/tmp/thumbnails$uri /index.php;",
                        "        expires 2w;",
                        "        access_log off;",
                        "        add_header Cache-Control \"public\";",
                        "    }",
                        "",
                        "    # Assets",
                        "    # Still use a whitelist approach to prevent each and every missing asset to go through the PHP Engine.",
                        "    location ~* ^(?!/admin|/asset/webdav)(.+?)\\.((?:css|js)(?:\\.map)?|jpe?g|gif|png|svgz?|eps|exe|gz|zip|mp\\d|m4a|ogg|ogv|webp|webm|pdf|docx?|xlsx?|pptx?)$ {",
                        "        try_files /var/assets$uri $uri =404;",
                        "        expires 2w;",
                        "        access_log off;",
                        "        log_not_found off;",
                        "        add_header Cache-Control \"public\";",
                        "    }",
                        "",
                        "    location / {",
                        "        error_page 404 /meta/404;",
                        "        try_files $static_page_root$static_page_uri.html $uri /index.php$is_args$args;",
                        "    }",
                        "",
                        "    # Use this location when the installer has to be run",
                        "    # location ~ /(index|install)\\.php(/|$) {",
                        "    #",
                        "    # Use this after initial install is done:",
                        "    location ~ ^/index\\.php(/|$) {",
                        "        send_timeout 1800;",
                        "        fastcgi_read_timeout 1800;",
                        "        # regex to split $uri to $fastcgi_script_name and $fastcgi_path_info",
                        "        fastcgi_split_path_info ^(.+\\.php)(/.+)$;",
                        "        # Check that the PHP script exists before passing it",
                        "        #try_files $fastcgi_script_name =404;",
                        "        # include fastcgi.conf if needed",
                        "        include fastcgi_params;",
                        "        # Bypass the fact that try_files resets $fastcgi_path_info",
                        "        # see: http://trac.nginx.org/nginx/ticket/321",
                        "        set $path_info $fastcgi_path_info;",
                        "        fastcgi_param PATH_INFO $path_info;",
                        "",
                        "        # Activate these, if using Symlinks and opcache",
                        "        fastcgi_param SCRIPT_FILENAME $realpath_root$fastcgi_script_name;",
                        "        fastcgi_param DOCUMENT_ROOT $realpath_root;",
                        "",
                        "        # Mitigate https://httpoxy.org/ vulnerabilities",
                        "        fastcgi_param HTTP_PROXY \"\";",
                        "",
                        "        fastcgi_pass php-pimcore10;",
                        "        # Prevents URIs that include the front controller. This will 404:",
                        "        # http://domain.tld/index.php/some-path",
                        "        # Remove the internal directive to allow URIs like this",
                        "        internal;",
                        "    }",
                        "",
                        "    # PHP-FPM Status and Ping",
                        "    location /fpm- {",
                        "        access_log off;",
                        "        include fastcgi_params;",
                        "        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;",
                        "        location /fpm-status {",
                        "            allow 127.0.0.1;",
                        "            # add additional IP's or Ranges",
                        "            deny all;",
                        "            fastcgi_pass php-pimcore10;",
                        "        }",
                        "        location /fpm-ping {",
                        "            fastcgi_pass php-pimcore10;",
                        "        }",
                        "    }",
                        "    # nginx Status",
                        "    # see: https://nginx.org/en/docs/http/ngx_http_stub_status_module.html",
                        "    location /nginx-status {",
                        "        allow 127.0.0.1;",
                        "        deny all;",
                        "        access_log off;",
                        "        stub_status;",
                        "    }",
                        "}",
                        ""
                    ],
                    "executable": false
                },
                "bin/console": {
                    "contents": [
                        "#!/usr/bin/env php",
                        "<?php",
                        "/**",
                        " * Pimcore",
                        " *",
                        " * This source file is available under two different licenses:",
                        " * - GNU General Public License version 3 (GPLv3)",
                        " * - Pimcore Enterprise License (PEL)",
                        " * Full copyright and license information is available in",
                        " * LICENSE.md which is distributed with this source code.",
                        " *",
                        " * @copyright  Copyright (c) Pimcore GmbH (http://www.pimcore.org)",
                        " * @license    http://www.pimcore.org/license     GPLv3 and PEL",
                        " */",
                        "",
                        "use Pimcore\\Bootstrap;",
                        "use Pimcore\\Console\\Application;",
                        "",
                        "if (file_exists($a = getcwd() . '/vendor/autoload_runtime.php')) {",
                        "    require_once $a;",
                        "} elseif (file_exists($a = __DIR__ . '/../vendor/autoload_runtime.php')) {",
                        "    require_once $a;",
                        "} elseif (file_exists($a = __DIR__ . '/../../../../vendor/autoload_runtime.php')) {",
                        "    require_once $a;",
                        "} elseif (file_exists($a = __DIR__ . '/../autoload_runtime.php')) {",
                        "    require_once $a;",
                        "} else {",
                        "    throw new LogicException('Symfony Runtime is missing. Try running \"composer require symfony/runtime\".');",
                        "}",
                        "",
                        "define('PIMCORE_CONSOLE', true);",
                        "",
                        "Bootstrap::setProjectRoot();",
                        "",
                        "return function (array $context) {",
                        "    $kernel = Bootstrap::startupCli();",
                        "",
                        "    return new Application($kernel);",
                        "};",
                        ""
                    ],
                    "executable": false
                },
                "config/bundles.php": {
                    "contents": [
                        "<?php",
                        "",
                        "return [",
                        "    //Twig\\Extra\\TwigExtraBundle\\TwigExtraBundle::class => ['all' => true],",
                        "];",
                        ""
                    ],
                    "executable": false
                },
                "config/config.yaml": {
                    "contents": [
                        "imports:",
                        "    - { resource: 'local/' }",
                        "",
                        "",
                        "pimcore:",
                        "",
                        "# IMPORTANT Notice!",
                        "# Following there are only some examples listed, for a full list of possible options, please run the following command:",
                        "# ./bin/console debug:config pimcore",
                        "# you can also filter them by path, eg.",
                        "# ./bin/console debug:config pimcore assets",
                        "# or even more specific:",
                        "# ./bin/console debug:config pimcore assets.image",
                        "",
                        "",
                        "#### TRANSLATIONS",
                        "#    translations:",
                        "#        case_insensitive: true",
                        "",
                        "#### FEATURE FLAGS",
                        "#    flags:",
                        "#        zend_date: true",
                        "",
                        "#### CLASS OVERRIDES EXAMPLES",
                        "#    models:",
                        "#        class_overrides:",
                        "#            'Pimcore\\Model\\DataObject\\News': 'App\\Model\\DataObject\\News'",
                        "#            'Pimcore\\Model\\DataObject\\News\\Listing': 'App\\Model\\DataObject\\News\\Listing'",
                        "#            'Pimcore\\Model\\DataObject\\Folder': 'App\\Model\\DataObject\\Folder'",
                        "#            'Pimcore\\Model\\Asset\\Folder': 'App\\Model\\Asset\\Folder'",
                        "#            'Pimcore\\Model\\Asset\\Image': 'App\\Model\\Asset\\Image'",
                        "#            'Pimcore\\Model\\Document\\Page': 'App\\Model\\Document\\Page'",
                        "#            'Pimcore\\Model\\Document\\Link': 'App\\Model\\Document\\Link'",
                        "#            'Pimcore\\Model\\Document\\Listing': 'App\\Model\\Document\\Listing'",
                        "",
                        "",
                        "#### CUSTOM DOCUMENT EDITABLES",
                        "#    documents:",
                        "#        allow_trailing_slash: 'yes'",
                        "#        generate_preview: false",
                        "#        tags:",
                        "#            map:",
                        "#                markdown: \\App\\Model\\Document\\Tag\\Markdown",
                        "",
                        "",
                        "#### CUSTOM OBJECT DATA TYPES",
                        "#    objects:",
                        "#        class_definitions:",
                        "#            data:",
                        "#                map:",
                        "#                  myDataType: \\App\\Model\\DataObject\\Data\\MyDataType",
                        "",
                        "",
                        "#### ASSET CUSTOM SETTINGS",
                        "#    assets:",
                        "#        icc_rgb_profile: ''",
                        "#        icc_cmyk_profile: ''",
                        "#        versions:",
                        "#            use_hardlinks: false",
                        "#        image:",
                        "#            low_quality_image_preview:",
                        "#                enabled: false",
                        "#                generator: imagick",
                        "#            thumbnails:",
                        "#                webp_auto_support: false",
                        "",
                        "",
                        "#### SYSTEM SETTINGS",
                        "",
                        "#    general:",
                        "#        timezone: Europe/Berlin",
                        "#        path_variable: ''",
                        "#        instance_identifier: ''",
                        "#    full_page_cache:",
                        "#        enabled: false",
                        "#        lifetime: null",
                        "#        exclude_cookie: ''",
                        "#        exclude_patterns: ''",
                        "#    httpclient:",
                        "#        adapter: Socket # use 'Proxy' for custom proxy configuration",
                        "#        proxy_host: ''",
                        "#        proxy_port: ''",
                        "#        proxy_user: ''",
                        "#        proxy_pass: ''",
                        "#    email:",
                        "#        sender:",
                        "#            name: 'Pimcore Demo'",
                        "#            email: demo@pimcore.com",
                        "#        return:",
                        "#            name: ''",
                        "#            email: ''",
                        "",
                        "#    applicationlog:",
                        "#        mail_notification:",
                        "#            send_log_summary: false",
                        "#            filter_priority: null",
                        "#            mail_receiver: ''",
                        "#        archive_treshold: '30'",
                        "#        archive_alternative_database: ''",
                        "",
                        "#### SYMFONY OVERRIDES",
                        "framework:",
                        "",
                        "#### DEFINE LOCATION OF MANIFEST WHEN WORKING WITH SYMFONY ENCORE",
                        "#    assets:",
                        "#        json_manifest_path: '%kernel.project_dir%/public/build/manifest.json'",
                        "",
                        "#### USE CUSTOM CACHE POOL",
                        "#    cache:",
                        "#        pools:",
                        "#            pimcore.cache.pool:",
                        "#                public: true",
                        "#                default_lifetime: 31536000  # 1 year",
                        "#                adapter: cache.adapter.redis_tag_aware",
                        "#                provider: 'redis://localhost' # Redis DNS, see: https://symfony.com/doc/current/components/cache/adapters/redis_adapter.html#configure-the-connection",
                        "",
                        "#### USE SESSION HANDLER CONFIGURED IN php.ini",
                        "#    session:",
                        "#        handler_id: null",
                        "",
                        "#### SYMFONY MAILER TRANSPORTS",
                        "#    mailer:",
                        "#        transports:",
                        "#            main: smtp://user:pass@smtp.example.com:port",
                        "#            pimcore_newsletter: smtp://user:pass@smtp.example.com:port",
                        "",
                        "# pimcore_newsletter:",
                        "#     default_url_prefix: 'https://my-host.com' # default prefix for your static assets",
                        "#     use_specific: false # set true to use the following options for newsletter delivery",
                        "#     sender:",
                        "#         name: ''",
                        "#         email: ''",
                        "#     return:",
                        "#         name: ''",
                        "#         email: ''",
                        "",
                        ""
                    ],
                    "executable": false
                },
                "config/installer.yaml": {
                    "contents": [
                        "services:",
                        "    # default configuration for services in *this* file",
                        "    _defaults:",
                        "        # automatically injects dependencies in your services",
                        "        autowire: true",
                        "        # automatically registers your services as commands, event subscribers, etc.",
                        "        autoconfigure: true",
                        "        # this means you cannot fetch services directly from the container via $container->get()",
                        "        # if you need to do this, you can override this setting on individual services",
                        "        public: false",
                        "",
                        "    # ---------------------------------------------------------",
                        "    # Event Subscribers",
                        "    # ---------------------------------------------------------",
                        "    App\\EventSubscriber\\BundleSetupSubscriber: ~"
                    ],
                    "executable": false
                },
                "config/local/.gitkeep": {
                    "contents": [
                        "",
                        ""
                    ],
                    "executable": false
                },
                "config/packages/dev/config.yaml": {
                    "contents": [
                        "imports:",
                        "    - { resource: ../../config.yaml }",
                        ""
                    ],
                    "executable": false
                },
                "config/packages/prod/config.yaml": {
                    "contents": [
                        "imports:",
                        "    - { resource: ../../config.yaml }",
                        ""
                    ],
                    "executable": false
                },
                "config/packages/security.yaml": {
                    "contents": [
                        "security:",
                        "    enable_authenticator_manager: true",
                        "",
                        "    providers:",
                        "        pimcore_admin:",
                        "            id: Pimcore\\Security\\User\\UserProvider",
                        "",
                        "    firewalls:",
                        "        dev:",
                        "            pattern: ^/(_(profiler|wdt)|css|images|js)/",
                        "            security: false",
                        "",
                        "        # Pimcore WebDAV HTTP basic // DO NOT CHANGE!",
                        "        pimcore_webdav:",
                        "            pattern: ^/asset/webdav",
                        "            provider: pimcore_admin",
                        "            http_basic: ~",
                        "",
                        "        # Pimcore Admin Bundle firewall",
                        "        pimcore_admin: '%pimcore_admin_bundle.firewall_settings%'",
                        "",
                        "    access_control:",
                        "        # Pimcore admin ACl  // DO NOT CHANGE!",
                        "        - { path: ^/admin/settings/display-custom-logo, roles: PUBLIC_ACCESS }",
                        "        - { path: ^/admin/login/2fa-verify, roles: IS_AUTHENTICATED_2FA_IN_PROGRESS }",
                        "        - { path: ^/admin/login/2fa-setup, roles: ROLE_PIMCORE_USER }",
                        "        - { path: ^/admin/login/2fa, roles: IS_AUTHENTICATED_2FA_IN_PROGRESS }",
                        "        - { path: ^/admin/login$, roles: PUBLIC_ACCESS }",
                        "        - { path: ^/admin/login/(login|lostpassword|deeplink|csrf-token)$, roles: PUBLIC_ACCESS }",
                        "        - { path: ^/admin, roles: ROLE_PIMCORE_USER }",
                        "        - { path: ^/asset/webdav, roles: ROLE_PIMCORE_USER }",
                        "",
                        "    role_hierarchy:",
                        "        # Pimcore admin  // DO NOT CHANGE!",
                        "        ROLE_PIMCORE_ADMIN: [ROLE_PIMCORE_USER]",
                        ""
                    ],
                    "executable": false
                },
                "config/packages/test/config.yaml": {
                    "contents": [
                        "imports:",
                        "    - { resource: ../dev/config.yaml }",
                        "",
                        "doctrine:",
                        "    dbal:",
                        "        connections:",
                        "            default:",
                        "                url: '%pimcore_test.db.dsn%'",
                        "                host: ~",
                        "                port: ~",
                        "                dbname: ~",
                        "                user: ~",
                        "                password: ~",
                        "",
                        "parameters:",
                        "    pimcore_test.db.dsn: '%env(PIMCORE_TEST_DB_DSN)%'",
                        "    env(PIMCORE_TEST_DB_DSN): ~",
                        "    pimcore.encryption.secret: 'def00000fc1e34a17a03e2ef85329325b0736a5941633f8062f6b0a1a20f416751af119256bea0abf83ac33ef656b3fff087e1ce71fa6b8810d7f854fe2781f3fe4507f6'",
                        ""
                    ],
                    "executable": false
                },
                "config/pimcore/constants.example.php": {
                    "contents": [
                        "<?php",
                        "",
                        "// to use this file you have to rename it to constants.php",
                        "// you can use this file to overwrite the constants defined in lib/Bootstrap.php",
                        "",
                        "// EXAMPLES:",
                        "",
                        "// Overwrite locations",
                        "//define(\"PIMCORE_ASSET_DIRECTORY\", \"/custom/path/to/assets\");",
                        "//define(\"PIMCORE_TEMPORARY_DIRECTORY\", \"/my/tmp/path\");",
                        ""
                    ],
                    "executable": false
                },
                "config/pimcore/google-api-private-key.json.example": {
                    "contents": [
                        "{",
                        "  \"type\": \"service_account\",",
                        "  \"project_id\": \"api-project-73893596983\",",
                        "  \"private_key_id\": \"e2afe72839dbf9f39e33aad363907a9ebd563bf9\",",
                        "  \"private_key\": \"-----BEGIN PRIVATE KEY-----\\nMIIEvgIBADANBgkqhkiG9w0BAQEFAASCBKgwggSkAgEAAoIBAQDAifl1kWlxgHM/\\nGHILhcrOi7TF4ASPO6aXxeSpOivieUVeuIx7kWxNLUsgtqRaTAXApXSAxnLglhS4\\nKqaxP3VpGHlyA2ec1gnalziq4liAoTuzqk6tcqfkw0s+M6Mqio0JTDkljYsPVgDj\\nrCVOqgK6tU+74ya816EkWfWvA/m/h1llWDWboIoCH04MSb9zT6IEXCaE8U3kXMZW\\ntOYmn7sEwRGAkAgIZoMJYT1ORvy0ctObk+UZzFNeJXLI2eXVfkC3YoHZvTouucS3\\n9arYmcdqi/92QZl6MA8qGUrkzFKb2PlnXi2A6lxbXLvnHjom3k4s9BYvpUmhBpqr\\n4q2WWrmDAgMBAAECggEAEcYq80GDPGkhOnflP08Qk9St0X6GrTpSfLxWCZFHL9cG\\nImJjBZ09JDrELrbtoTBXb5tWj/TB8h2ot/+n98Dl89fAjlfmHsJbkoRXRN80UFuS\\nCVn1fWmSOjoVHh7iNzEnJ+6Tb/YLGlVUK7BemU50hgvq2mtzzgcR5ysu1QNG8PlC\\ncVkgjOCz0rMyyPeqhnVCQWLyczk1kyhTthyxQu8hZ+IR1XdFLW1tiKKV+9bZX7HV\\nRVbYHuiFEM0Teb62yKEbAzUyPzln4DJsCTjtC1gqtQrLsKWy40t0mWSqj4hXEJbx\\nepYBo5MHaW2T/FpjGsJ22jixs77bXYXrwh9T609AYQKBgQD5RqFOJBMznSmkdF1K\\nRlgN4XG4JFiJQSzsEABbQ6nLnraXRoIZLMqGNT9RZhjjksey+DOGQjhyLW2XcByl\\ntwva/VX2maVkizsrRQUTr4AjeYdhbxnXG6Yn9LSu8dgipzWwP3l008vBUlQR9qSN\\nZ4x6MTHgzeclOx/dA45hU40t+QKBgQDFu4xs1zamDgDa7LOxmEjgRj1J+uNgVm7y\\nzL0ze0ZRRTo4PIvqxCRIZhxk/eTtnBMCi6z7VHYtIWT+hGY6/AIGwsHBequiHfBU\\naFISHR3I9Rnpn9mqzPa9SCB8SirU8OnyhD6WQBcd2dqmpEtSUOXxkwIbIOTa1xRN\\nGa9bIObyWwKBgQC5Is32nTBtqxIchBgta+VGGeQ94TCob/GPOasqHSzkf/IYlFNX\\noz6fQrjOGcfubTtIHrMVyeTmV/sG+EsugK6bbIAF8MM303iUgGRu5G+E6WO057EH\\nZA+ZqVLwg8oEoq9rQRlRvWOdJyotVUONihR5RERJNGOx8SGPIm8Cte0q8QKBgQCM\\n+w7BX6T4Oo3DifcJDeIP/iSexcIuoxHSDcZsmV1mfqxnAkxkY9rWv+9I1nnOLHSl\\nYP9B51OnE+NVUQMu1RWAyoWpNJSBL0V2eTbi8V2WNaN3HmDs1dyq0m1PEPZ/AxJa\\nto2FRUb2IqkyHXwSwdlhJ4bd3tMtcSJpYoHTwJ7JdwKBgDPCBLDir1qz2ZgBOmTv\\nTcCB3rOVTrS6hGPkHgosmKiAtNqD4mjKgHMI9mcQENtr/BrXpNiO0VtM72VhJuxE\\npe2WF8TWYtGNa2yIJOsUmY5DrL+2UJd0cig+/IcMi1nKjWQloQ0rpoBrN2TZRPGM\\nGS3o3ymJ1tlfWOvl7Fq4G6RH\\n-----END PRIVATE KEY-----\\n\",",
                        "  \"client_email\": \"73893596983@developer.gserviceaccount.com\",",
                        "  \"client_id\": \"73893596983.apps.googleusercontent.com\",",
                        "  \"auth_uri\": \"https://accounts.google.com/o/oauth2/auth\",",
                        "  \"token_uri\": \"https://accounts.google.com/o/oauth2/token\",",
                        "  \"auth_provider_x509_cert_url\": \"https://www.googleapis.com/oauth2/v1/certs\",",
                        "  \"client_x509_cert_url\": \"https://www.googleapis.com/robot/v1/metadata/x509/73893596983%40developer.gserviceaccount.com\"",
                        "}",
                        ""
                    ],
                    "executable": false
                },
                "config/preload.php": {
                    "contents": [
                        "<?php",
                        "",
                        "if (file_exists(dirname(__DIR__).'/var/cache/prod/App_KernelProdContainer.preload.php')) {",
                        "    require dirname(__DIR__).'/var/cache/prod/App_KernelProdContainer.preload.php';",
                        "}",
                        ""
                    ],
                    "executable": false
                },
                "config/routes.yaml": {
                    "contents": [
                        "_pimcore:",
                        "    resource: \"@PimcoreCoreBundle/config/routing.yaml\"",
                        "",
                        "app:",
                        "    resource: \"../src/Controller/\"",
                        "    type: annotation"
                    ],
                    "executable": false
                },
                "config/routes/dev/routes.yaml": {
                    "contents": [
                        "_pimcore_dev:",
                        "    resource: \"@PimcoreCoreBundle/config/routing_dev.yaml\"",
                        ""
                    ],
                    "executable": false
                },
                "config/services.yaml": {
                    "contents": [
                        "parameters:",
                        "    secret: ThisTokenIsNotSoSecretChangeItImmediately",
                        "",
                        "    # customize the full path to external executables",
                        "    # normally they are auto-detected by `which program` or auto-discovered in the configured path in",
                        "    # System Settings -> General -> Additional $PATH variable",
                        "    # but in general it's a good idea to have your programs in your $PATH environment variable (system wide)",
                        "",
                        "    #pimcore_executable_composer: php /opt/vendor/bin/composer.phar",
                        "    #pimcore_executable_html2text: /usr/local/html2text/bin/html2text",
                        "    #pimcore_executable_soffice: /opt/libreoffice/bin/soffice",
                        "    #pimcore_executable_gs: /opt/ghostscript/bin/gs",
                        "    #pimcore_executable_pdftotext: /opt/tools/pdftotext",
                        "    #pimcore_executable_xvfb-run: /opt/tools/xvfb-run",
                        "    #pimcore_executable_pngcrush: /opt/tools/pngcrush",
                        "    #pimcore_executable_zopflipng: /opt/tools/zopflipng",
                        "    #pimcore_executable_pngout: /opt/tools/pngout",
                        "    #pimcore_executable_advpng: /opt/tools/advpng",
                        "    #pimcore_executable_cjpeg: /opt/tools/cjpeg",
                        "    #pimcore_executable_jpegoptim: /opt/tools/jpegoptim",
                        "    #pimcore_executable_php: /usr/local/custom-php/bin/php",
                        "    #pimcore_executable_nice: /opt/tools/nice",
                        "    #pimcore_executable_nohup: /opt/tools/nohup",
                        "    #pimcore_executable_ffmpeg: /opt/tools/ffmpeg",
                        "    #pimcore_executable_exiftool: /opt/tools/exiftool",
                        "    #pimcore_executable_wkhtmltoimage: /usr/local/bin/wkhtmltoimage",
                        "    #pimcore_executable_timeout: /usr/bin/timeout",
                        "    #pimcore_executable_facedetect: /usr/bin/facedetect",
                        "    # graphviz",
                        "    #pimcore_executable_dot: /usr/bin/dot",
                        "",
                        "services:",
                        "    # default configuration for services in *this* file",
                        "    _defaults:",
                        "        # automatically injects dependencies in your services",
                        "        autowire: true",
                        "        # automatically registers your services as commands, event subscribers, etc.",
                        "        autoconfigure: true",
                        "        # this means you cannot fetch services directly from the container via $container->get()",
                        "        # if you need to do this, you can override this setting on individual services",
                        "        public: false",
                        "    #",
                        "    # CONTROLLERS",
                        "    #",
                        "",
                        "    # auto-register all controllers as services",
                        "    App\\Controller\\:",
                        "        resource: '../src/Controller'",
                        "        public: true",
                        "        tags: [ 'controller.service_arguments' ]",
                        "",
                        "",
                        "    #",
                        "    # COMMANDS",
                        "    #",
                        "",
                        "    # auto-register all commands as services",
                        "    App\\Command\\:",
                        "        resource: '../src/Command/*'",
                        "        tags: [ 'console.command' ]",
                        "",
                        "",
                        "",
                        "    # Example custom templating helper",
                        "    # App\\Templating\\Helper\\Example:",
                        "    #     # templating helpers need to be public as they",
                        "    #     # are fetched from the container on demand",
                        "    #     public: true",
                        "    #     tags:",
                        "    #         - { name: templating.helper, alias: fooBar }",
                        "",
                        "    # Example event listener for objects",
                        "    # App\\EventListener\\TestListener:",
                        "    #     tags:",
                        "    #         - { name: kernel.event_listener, event: pimcore.dataobject.preUpdate, method: onObjectPreUpdate }",
                        ""
                    ],
                    "executable": false
                },
                "public/index.php": {
                    "contents": [
                        "<?php",
                        "/**",
                        " * Pimcore",
                        " *",
                        " * This source file is available under two different licenses:",
                        " * - GNU General Public License version 3 (GPLv3)",
                        " * - Pimcore Enterprise License (PEL)",
                        " * Full copyright and license information is available in",
                        " * LICENSE.md which is distributed with this source code.",
                        " *",
                        " * @copyright  Copyright (c) Pimcore GmbH (http://www.pimcore.org)",
                        " * @license    http://www.pimcore.org/license     GPLv3 and PEL",
                        " */",
                        "",
                        "use Pimcore\\Bootstrap;",
                        "use Pimcore\\Tool;",
                        "use Symfony\\Component\\HttpFoundation\\Request;",
                        "",
                        "require_once dirname(__DIR__).'/vendor/autoload_runtime.php';",
                        "",
                        "Bootstrap::setProjectRoot();",
                        "",
                        "return function (Request $request, array $context) {",
                        "",
                        "    // set current request as property on tool as there's no",
                        "    // request stack available yet",
                        "    Tool::setCurrentRequest($request);",
                        "",
                        "    Bootstrap::bootstrap();",
                        "    $kernel = Bootstrap::kernel();",
                        "",
                        "    // reset current request - will be read from request stack from now on",
                        "    Tool::setCurrentRequest(null);",
                        "",
                        "    return $kernel;",
                        "};",
                        ""
                    ],
                    "executable": false
                },
                "src/Controller/DefaultController.php": {
                    "contents": [
                        "<?php",
                        "",
                        "namespace App\\Controller;",
                        "",
                        "use Pimcore\\Bundle\\AdminBundle\\Controller\\Admin\\LoginController;",
                        "use Pimcore\\Controller\\FrontendController;",
                        "use Symfony\\Component\\HttpFoundation\\Request;",
                        "use Symfony\\Component\\HttpFoundation\\Response;",
                        "",
                        "class DefaultController extends FrontendController",
                        "{",
                        "    public function defaultAction(Request $request): Response",
                        "    {",
                        "        return $this->render('default/default.html.twig');",
                        "    }",
                        "",
                        "    /**",
                        "     * Forwards the request to admin login",
                        "     */",
                        "    public function loginAction(): Response",
                        "    {",
                        "        return $this->forward(LoginController::class.'::loginCheckAction');",
                        "    }",
                        "}",
                        ""
                    ],
                    "executable": false
                },
                "src/EventSubscriber/BundleSetupSubscriber.php": {
                    "contents": [
                        "<?php",
                        "",
                        "declare(strict_types=1);",
                        "",
                        "/**",
                        " * Pimcore",
                        " *",
                        " * This source file is available under two different licenses:",
                        " * - GNU General Public License version 3 (GPLv3)",
                        " * - Pimcore Commercial License (PCL)",
                        " * Full copyright and license information is available in",
                        " * LICENSE.md which is distributed with this source code.",
                        " *",
                        " *  @copyright  Copyright (c) Pimcore GmbH (http://www.pimcore.org)",
                        " *  @license    http://www.pimcore.org/license     GPLv3 and PCL",
                        " */",
                        "",
                        "namespace App\\EventSubscriber;",
                        "",
                        "use Pimcore\\Bundle\\AdminBundle\\PimcoreAdminBundle;",
                        "use Pimcore\\Bundle\\InstallBundle\\Event\\BundleSetupEvent;",
                        "use Pimcore\\Bundle\\InstallBundle\\Event\\InstallEvents;",
                        "use Symfony\\Component\\EventDispatcher\\EventSubscriberInterface;",
                        "",
                        "class BundleSetupSubscriber implements EventSubscriberInterface",
                        "{",
                        "    public static function getSubscribedEvents(): array",
                        "    {",
                        "        return [",
                        "            InstallEvents::EVENT_BUNDLE_SETUP => [",
                        "                ['bundleSetup'],",
                        "            ],",
                        "        ];",
                        "    }",
                        "",
                        "    public function bundleSetup(BundleSetupEvent $event): void",
                        "    {",
                        "        // add required PimcoreAdminBundle",
                        "        $event->addRequiredBundle('PimcoreAdminBundle', PimcoreAdminBundle::class, true);",
                        "    }",
                        "}",
                        ""
                    ],
                    "executable": false
                },
                "src/Kernel.php": {
                    "contents": [
                        "<?php",
                        "",
                        "/**",
                        " * Pimcore",
                        " *",
                        " * This source file is available under two different licenses:",
                        " * - GNU General Public License version 3 (GPLv3)",
                        " * - Pimcore Enterprise License (PEL)",
                        " * Full copyright and license information is available in",
                        " * LICENSE.md which is distributed with this source code.",
                        " *",
                        " * @copyright  Copyright (c) Pimcore GmbH (http://www.pimcore.org)",
                        " * @license    http://www.pimcore.org/license     GPLv3 and PEL",
                        " */",
                        "",
                        "namespace App;",
                        "",
                        "use Pimcore\\Bundle\\AdminBundle\\PimcoreAdminBundle;",
                        "use Pimcore\\HttpKernel\\BundleCollection\\BundleCollection;",
                        "use Pimcore\\Kernel as PimcoreKernel;",
                        "",
                        "class Kernel extends PimcoreKernel",
                        "{",
                        "    /**",
                        "     * Adds bundles to register to the bundle collection. The collection is able",
                        "     * to handle priorities and environment specific bundles.",
                        "     *",
                        "     */",
                        "    public function registerBundlesToCollection(BundleCollection $collection): void",
                        "    {",
                        "        $collection->addBundle(new PimcoreAdminBundle(), 60);",
                        "    }",
                        "}",
                        ""
                    ],
                    "executable": false
                },
                "templates/default/default.html.twig": {
                    "contents": [
                        "<!DOCTYPE html>",
                        "<html lang=\"en\">",
                        "<head>",
                        "    <meta charset=\"UTF-8\">",
                        "    <title>Example</title>",
                        "</head>",
                        "",
                        "<body>",
                        "",
                        "<style type=\"text/css\">",
                        "    body {",
                        "        padding:0;",
                        "        margin: 0;",
                        "        font-family: \"Lucida Sans Unicode\", Arial, sans-serif;",
                        "        font-size: 14px;",
                        "    }",
                        "",
                        "    #site {",
                        "        margin: 0 auto;",
                        "        width: 600px;",
                        "        padding: 30px 0 0 0;",
                        "        color:#65615E;",
                        "    }",
                        "",
                        "    h1, h2, h3 {",
                        "        font-size: 18px;",
                        "        padding: 0 0 5px 0;",
                        "        border-bottom: 1px solid #001428;",
                        "        margin-bottom: 5px;",
                        "    }",
                        "",
                        "    h3 {",
                        "        font-size: 14px;",
                        "        padding: 15px 0 5px 0;",
                        "        margin-bottom: 5px;",
                        "        border-color: #cccccc;",
                        "    }",
                        "",
                        "    img {",
                        "        border: 0;",
                        "    }",
                        "",
                        "    p {",
                        "        padding: 0 0 5px 0;",
                        "    }",
                        "",
                        "    a {",
                        "        color: #000;",
                        "    }",
                        "",
                        "    #logo {",
                        "        text-align: center;",
                        "        padding: 50px 0;",
                        "    }",
                        "",
                        "    #logo hr {",
                        "        display: block;",
                        "        height: 1px;",
                        "        overflow: hidden;",
                        "        background: #BBB;",
                        "        border: 0;",
                        "        padding:0;",
                        "        margin:30px 0 20px 0;",
                        "    }",
                        "",
                        "    .claim {",
                        "        text-transform: uppercase;",
                        "        color:#BBB;",
                        "    }",
                        "",
                        "    #site ul {",
                        "        padding: 10px 0 10px 20px;",
                        "        list-style: circle;",
                        "    }",
                        "",
                        "    .buttons {",
                        "        margin-bottom: 100px;",
                        "        text-align: center;",
                        "    }",
                        "",
                        "    .buttons a {",
                        "        display: inline-block;",
                        "        background: #6428b4;",
                        "        color:#fff;",
                        "        padding: 5px 10px;",
                        "        margin-right: 10px;",
                        "        width:40%;",
                        "        border-radius: 2px;",
                        "        text-decoration: none;",
                        "    }",
                        "",
                        "    .buttons a:hover {",
                        "        background: #1C8BC1;",
                        "    }",
                        "",
                        "    .buttons a:last-child {",
                        "        margin: 0;",
                        "    }",
                        "",
                        "</style>",
                        "",
                        "",
                        "<div id=\"site\">",
                        "    <div id=\"logo\">",
                        "        <a href=\"http://www.pimcore.com/\"><img src=\"/bundles/pimcoreadmin/img/logo-claim-gray.svg\" alt=\"Logo claim grey\" style=\"width: 400px;\" /></a>",
                        "        <hr />",
                        "    </div>",
                        "",
                        "    {% if editmode %}",
                        "        <div class=\"buttons\">",
                        "            <a target=\"_blank\" href=\"https://pimcore.com/docs/platform/Pimcore/Getting_Started/Installation/Webserver_Installation\">Install Sample Data / Boilerplate</a>",
                        "            <a target=\"_blank\" href=\"https://pimcore.com/docs/platform/Pimcore/Getting_Started\">Getting Started</a>",
                        "        </div>",
                        "",
                        "        <div class=\"info\">",
                        "            <h2>Where can I edit some pages?</h2>",
                        "            <p>",
                        "                Well, it seems that you're using the professional distribution of pimcore which doesn't include any",
                        "                templates / themes or contents, it's designed to start a project from scratch. If you need a jump start",
                        "                please consider using our sample data / boilerplate package which includes everything you need to get started.",
                        "            </p>",
                        "        </div>",
                        "    {% endif %}",
                        "</div>",
                        "",
                        "</body>",
                        "</html>",
                        ""
                    ],
                    "executable": false
                }
            },
            "ref": "2de47605d95f6baa0303839382a5fc594694d052"
        }
    }
}
